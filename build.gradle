buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }

    dependencies {
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.11.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.19.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.9.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:4.78.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.14.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.6.0'
    }
}

repositories {
    gradlePluginPortal()
    mavenCentral()
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.git-version'

group 'com.palantir.gradle.shadow-jar'
version System.env.CIRCLE_TAG ?: gitVersion()

apply plugin: 'java-library'
apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.baseline'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'org.inferred.processors'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.baseline-java-versions'

dependencies {
    implementation localGroovy()
    implementation gradleApi()
    implementation 'gradle.plugin.com.github.johnrengelman:shadow'
    implementation 'com.google.guava:guava'

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'

    testImplementation 'com.netflix.nebula:nebula-test'
    testImplementation 'commons-io:commons-io'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine', {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }
}


allprojects {
    apply plugin: 'com.palantir.java-format'
}

gradlePlugin {
    // do not add new task to publish to plugins.gradle.org
    automatedPublishing = false
}

javaVersions {
    libraryTarget = 11
    runtime = 17
}
