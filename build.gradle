buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.6.0'
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.38.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.14.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.15.0'
        classpath 'com.palantir.gradle.failure-reports:gradle-failure-reports:1.10.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.47.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.22.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:5.58.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:3.1.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.7.0'
    }
}

repositories {
    mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    gradlePluginPortal()
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.git-version'

group 'com.palantir.gradle.shadow-jar'
version System.env.CIRCLE_TAG ?: gitVersion()

apply plugin: 'java-library'
apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.failure-reports'
apply plugin: 'com.palantir.baseline'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'org.inferred.processors'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.jdks.latest'

dependencies {
    implementation localGroovy()
    implementation gradleApi()
    implementation 'com.github.johnrengelman:shadow'
    implementation 'org.apache.ant:ant'
    implementation 'org.codehaus.plexus:plexus-utils'
    implementation 'com.google.guava:guava'

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'

    testImplementation 'com.netflix.nebula:nebula-test'
    testImplementation 'commons-io:commons-io'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine', {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }

    // only to check lib is banned
    testImplementation 'com.palantir.tracing:tracing'
    testImplementation 'com.palantir.safe-logging:safe-logging'
    testImplementation 'com.palantir.tritium:tritium-registry'
}


allprojects {
    apply plugin: 'com.palantir.java-format'
    apply plugin: 'com.palantir.jakarta-package-alignment'
}

gradlePlugin {
    // do not add new task to publish to plugins.gradle.org
    automatedPublishing = false
}

javaVersions {
    libraryTarget = 11
    runtime = 17
}

tasks.withType(ValidatePlugins).configureEach {
    // undo once we change gradle-jdks to use built in jdk locations
    getLauncher().set(provider { (JavaLauncher) null })
}
